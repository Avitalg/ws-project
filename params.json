{
  "name": "Ws-project",
  "tagline": "",
  "body": "### Welcome to GitHub Pages.\r\nThis is our formal API for Node.js service that was bulid with express module for a school project. \r\n### Looks\r\n####Get All Looks\r\nURL: `https://webserviceproj.herokuapp.com/api/getAllLooks`\r\nResult: All looks, including their steps\r\nMethod: GET\r\nExample: \r\n```\r\n{\r\n  look: \"fresh\",\r\n  image: \"http://res.cloudinary.com/desbjknxm/image/upload/v1468704051/rsz_3fresh_eovzbd.jpg\",\r\n  __v: 13,\r\n  steps: [\r\n  {\r\n    number: 1,\r\n    face_image: \"http://res.cloudinary.com/desbjknxm/image/upload/v1468700970/htijb01e02otjh6ozf24.jpg\",\r\n    description: \"description\",\r\n    product_id: 4\r\n  }]\r\n}\r\n```\r\n####Get Look\r\nURL: `https://webserviceproj.herokuapp.com/api/getLook/:look`\r\nResult: Specific Look.\r\nMethod: GET\r\nExample: Like above.\r\n\r\n####Add Look\r\nURL: `https://webserviceproj.herokuapp.com/api/addLook`\r\nResult: JSON with message - success/error.\r\nMethod: POST\r\nParams: look, url.\r\n\r\n####Add Look\r\nURL: `https://webserviceproj.herokuapp.com/api/updateLook`\r\nResult: JSON with message - success/error.\r\nMethod: POST\r\nParams: look, url.\r\n\r\n####Remove Look\r\nURL: `https://webserviceproj.herokuapp.com/api/removeLook/:look`\r\nResult: JSON with message - success/error.\r\nMethod: GET\r\nParams: look.\r\n\r\n####Add Step To Look\r\nURL: `https://webserviceproj.herokuapp.com/api/addStepToLook`\r\nResult: JSON with message - success/error.\r\nMethod: POST\r\nParams: look, number, url, desc, prodId.\r\nExplain: look- look's name, number - step number, url -image, desc - description, prodId- product id.\r\n\r\n####Remove Step From Look\r\nURL: `https://webserviceproj.herokuapp.com/api/removeStepFromLook/:look/:number`\r\nResult: JSON with message - success/error.\r\nMethod: GET\r\nParams: look-name of look, number- step number.\r\n\r\n####Remove Step From Look\r\nURL: `https://webserviceproj.herokuapp.com/api/getLookSteps/:look`\r\nResult: JSON with message - success/error.\r\nMethod: GET\r\n\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}